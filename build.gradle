plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
	id "io.freefair.lombok" version "5.2.1"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	jcenter()
	mavenCentral()
	maven {
		name = 'Ladysnake Libs'
		url = 'https://dl.bintray.com/ladysnake/libs'
	}
	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
	}
	maven {
		name = "hubbajub"
		url = "https://repo.repsy.io/mvn/px01tv/hubbajub/"
	}
	maven {
		name = "AperLambda"
		url = 'https://aperlambda.github.io/maven'
	}
	maven { url = "https://jitpack.io" }
}

minecraft {
	accessWidener "src/main/resources/emr.accesswidener"
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// non-mod dependencies
	implementation "com.google.code.gson:gson:${gson_version}"

	// mod dependencies
	// cloth config & autoconfig1u
	modApi("me.shedaniel.cloth:config-2:${cloth_config_version}") {
		exclude(group: 'net.fabricmc.fabric-api')
	}
	modApi('me.sargunvohra.mcmods:autoconfig1u:3.2.2') {
		exclude(group: 'net.fabricmc.fabric-api')
	}
	// cardinal components
	// Replace modImplementation with modApi if you expose components in your own API
	modImplementation "io.github.onyxstudios:Cardinal-Components-API:${cardinal_components_version}"

	modImplementation "io.github.prospector:modmenu:${modmenu_version}"

	// network stack
	modCompile "alexiil.mc.lib:libnetworkstack-base:${libnetworkstack_version}"

	// GUI
	modImplementation "io.px:mcgui:${mcgui_version}"

	// other


}

processResources {
	inputs.property 'version', project.version

	from(sourceSets.main.resources.srcDirs) {
		include 'fabric.mod.json'
		expand 'version': project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'fabric.mod.json'
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

jar {
	from 'LICENSE'
}
