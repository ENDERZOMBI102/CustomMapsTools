plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'com.github.ben-manes.versions' version '0.39.0'
	id 'java'
	id 'idea'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven {
		name 'AperLambda'
		url 'https://aperlambda.github.io/maven'
	}
	maven {
		name 'Gegy'
		url 'https://maven.gegy.dev'
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven { url 'https://maven.terraformersmc.com/releases/' }
	maven { url 'https://maven.saps.dev/minecraft' }
	maven { url 'https://maven.shedaniel.me/' }
}

minecraft {
	accessWidener 'src/main/resources/cmt.accesswidener'
}

dependencies {
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$loader_version"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"

	// --- lib dependencies ---
	implementation "blue.endless:jankson:$jankson_version"

	// --- mod dependencies ---
	// cloth config
	modApi("me.shedaniel.cloth:cloth-config-fabric:$cloth_config_version") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// modmenu
	modImplementation "com.terraformersmc:modmenu:$modmenu_version"

	// cardinal components
	include modImplementation( "io.github.onyxstudios:Cardinal-Components-API:$cca_version" )

	// GUI
	include modImplementation( "dev.lambdaurora:spruceui:$spruceui_version" )
	//	include "dev.lambdaurora:spruceui:$spruceui_version"

	// --- compat/integration dependencies ---
	// KubeJS
	modRuntime "dev.latvian.mods:kubejs-fabric:$kubejs_version"
}

processResources {
	inputs.property 'version', project.version

	duplicatesStrategy = DuplicatesStrategy.INCLUDE

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

jar {
	from 'LICENSE'
}
